very good docker tutorial channel https://www.youtube.com/playlist?list=PLZdsdjcJ44WU_cY2Y1LFLnmsSjFD5BZLZ
=============================================================================================


                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /"""""""""""""""""\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/

docker is configured to use the default machine with IP 192.168.99.100
For help getting started, check out the docs at https://docs.docker.com


Start interactive shell

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
Start interactive shell

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ ls
boot2docker.iso  docker-compose.exe*  docker-quickstart-terminal.ico  kitematic/  unins000.dat
docker.exe*      docker-machine.exe*  installers/                     start.sh*   unins000.exe*

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker -v
Docker version 18.03.0-ce, build 0520e24302
	
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker version
Client:
 Version:       18.03.0-ce
 API version:   1.37
 Go version:    go1.9.4
 Git commit:    0520e24302
 Built: Fri Mar 23 08:31:36 2018
 OS/Arch:       windows/amd64
 Experimental:  false
 Orchestrator:  swarm

Server:
 Engine:
  Version:      18.05.0-ce
  API version:  1.37 (minimum version 1.12)
  Go version:   go1.10.1
  Git commit:   f150324
  Built:        Wed May  9 22:20:42 2018
  OS/Arch:      linux/amd64
  Experimental: false

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker-machine ip default
192.168.99.100

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/


Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
hello-world                 latest              2cb0d9787c4d        3 days ago          1.85kB
alpine                      latest              11cd0b38bc3c        7 days ago          4.41MB
centos-som23                latest              fae43ac36cee        11 days ago         329MB
someshdevops2018/test       latest              fae43ac36cee        11 days ago         329MB
centos                      latest              49f7960eb7e4        5 weeks ago         200MB
devops2018/batch23          latest              6a2aae469127        5 months ago        357MB
dockersamples/static-site   latest              f589ccde7957        2 years ago         191MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker info
Containers: 13
 Running: 0
 Paused: 0
 Stopped: 13
Images: 6
Server Version: 18.05.0-ce
Storage Driver: aufs
 Root Dir: /mnt/sda1/var/lib/docker/aufs
 Backing Filesystem: extfs
 Dirs: 41
 Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 773c489c9c1b21a6d78b5c538cd395416ec50f88
runc version: 4fc53a81fb7c994640722ac585fa9ca548971871
init version: 949e6fa
Security Options:
 seccomp
  Profile: default
Kernel Version: 4.9.93-boot2docker
Operating System: Boot2Docker 18.05.0-ce (TCL 8.2.1); HEAD : b5d6989 - Thu May 10 16:35:28 UTC 2018
OSType: linux
Architecture: x86_64
CPUs: 1
Total Memory: 995.6MiB
Name: default
ID: 7B6U:LL4K:MJ7X:BQL4:AK7J:HDQV:45PF:PEWK:ZVAJ:FKCX:SGA5:IE6R
Docker Root Dir: /mnt/sda1/var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Username: someshdevops2018
Registry: https://index.docker.io/v1/
Labels:
 provider=virtualbox
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false


Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps -a
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS                        PORTS               NAMES
3ade16cb97ed        hello-world                 "/hello"                 5 minutes ago       Exited (0) 5 minutes ago                          mystifying_albattani
3b234053303d        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   18 minutes ago      Exited (137) 17 minutes ago                       upbeat_kare
e25c4f960dd3        alpine                      "/bin/sh"                20 minutes ago      Exited (0) 19 minutes ago                         eager_einstein
994a1fd988f5        alpine                      "echo 'hello from al…"   21 minutes ago      Exited (0) 21 minutes ago                         quirky_shtern
bdeed5e212b1        alpine                      "ls -l"                  22 minutes ago      Exited (0) 22 minutes ago                         silly_yalow
47daa94d2f3f        hello-world                 "/hello"                 24 minutes ago      Exited (0) 24 minutes ago                         thirsty_bartik
dd0ccaa1b50e        centos                      "/bin/bash"              5 days ago          Exited (255) 39 minutes ago                       gracious_mirzakhani
bf496b229594        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                          thirsty_lichterman
90862b21916b        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                            3Centos
714aa7097cb3        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                            2Centos
99002dca2766        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                          1centos
e0c4b6b65212        fae43ac36cee                "/bin/bash"              11 days ago         Exited (0) 11 days ago                            blissful_mendeleev
3d871ad261b1        fae43ac36cee                "/bin/bash"              11 days ago         Exited (127) 11 days ago                          happy_ardinghelli

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker search centos
NAME                               DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
centos                             The official build of CentOS.                   4419                [OK]
ansible/centos7-ansible            Ansible on Centos7                              114                                     [OK]
jdeathe/centos-ssh                 CentOS-6 6.9 x86_64 / CentOS-7 7.4.1708 x86_…   97                                      [OK]
consol/centos-xfce-vnc             Centos container with "headless" VNC session…   56                                      [OK]
tutum/centos                       Simple CentOS docker image with SSH access      43
imagine10255/centos6-lnmp-php56    centos6-lnmp-php56                              42                                      [OK]
centos/mysql-57-centos7            MySQL 5.7 SQL database server                   31
gluster/gluster-centos             Official GlusterFS Image [ CentOS-7 +  Glust…   31                                      [OK]
openshift/base-centos7             A Centos7 derived base image for Source-To-I…   28
centos/python-35-centos7           Platform for building and running Python 3.5…   25
kinogmt/centos-ssh                 CentOS with SSH                                 21                                      [OK]
centos/postgresql-96-centos7       PostgreSQL is an advanced Object-Relational …   21
openshift/jenkins-2-centos7        A Centos7 based Jenkins v2.x image for use w…   13
centos/httpd-24-centos7            Platform for running Apache httpd 2.4 or bui…   13
openshift/mysql-55-centos7         DEPRECATED: A Centos7 based MySQL v5.5 image…   6
openshift/jenkins-1-centos7        DEPRECATED: A Centos7 based Jenkins v1.x ima…   4
pivotaldata/centos-gpdb-dev        CentOS image for GPDB development. Tag names…   4
darksheer/centos                   Base Centos Image -- Updated hourly             3                                       [OK]
openshift/wildfly-101-centos7      A Centos7 based WildFly v10.1 image for use …   3
pivotaldata/centos                 Base centos, freshened up a little with a Do…   2
blacklabelops/centos               CentOS Base Image! Built and Updates Daily!     1                                       [OK]
pivotaldata/centos-mingw           Using the mingw toolchain to cross-compile t…   1
jameseckersall/sonarr-centos       Sonarr on CentOS 7                              0                                       [OK]
pivotaldata/centos-gcc-toolchain   CentOS with a toolchain, but unaffiliated wi…   0
smartentry/centos                  centos with smartentry                          0                                       [OK]

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker pull ubuntu:trusty
trusty: Pulling from library/ubuntu
28bfaceaff9b: Pull complete
ac540055f2f8: Pull complete
2965585ef8b8: Pull complete
2416bb9f3ad2: Pull complete
93b55a6a6807: Pull complete
Digest: sha256:885bb6705b01d99544ddb98cbe4e4555d1efe1d052cef90832e72a0688ac6b37
Status: Downloaded newer image for ubuntu:trusty

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
$ docker run ubuntu:trusty ls -l
total 64
drwxr-xr-x   2 root root 4096 May 31 06:12 bin
drwxr-xr-x   2 root root 4096 Apr 10  2014 boot
drwxr-xr-x   5 root root  340 Jul 14 04:49 dev
drwxr-xr-x  64 root root 4096 Jul 14 04:49 etc
drwxr-xr-x   2 root root 4096 Apr 10  2014 home
drwxr-xr-x  12 root root 4096 May 31 06:11 lib
drwxr-xr-x   2 root root 4096 May 31 06:09 lib64
drwxr-xr-x   2 root root 4096 May 31 06:08 media
drwxr-xr-x   2 root root 4096 Apr 10  2014 mnt
drwxr-xr-x   2 root root 4096 May 31 06:07 opt
dr-xr-xr-x 154 root root    0 Jul 14 04:49 proc
drwx------   2 root root 4096 May 31 06:12 root
drwxr-xr-x   8 root root 4096 Jun  5 21:21 run
drwxr-xr-x   2 root root 4096 Jun  5 21:21 sbin
drwxr-xr-x   2 root root 4096 May 31 06:07 srv
dr-xr-xr-x  13 root root    0 Jul 14 04:49 sys
drwxrwxrwt   2 root root 4096 May 31 06:12 tmp
drwxr-xr-x  11 root root 4096 May 31 06:08 usr
drwxr-xr-x  13 root root 4096 May 31 06:12 var

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps -a
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS                           PORTS               NAMES
1ef29507f5da        ubuntu:trusty               "ls -l"                  2 minutes ago       Exited (0) 2 minutes ago                             gracious_goodall
3ade16cb97ed        hello-world                 "/hello"                 20 minutes ago      Exited (0) 20 minutes ago                            mystifying_albattani
3b234053303d        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   34 minutes ago      Exited (137) 32 minutes ago                          upbeat_kare
e25c4f960dd3        alpine                      "/bin/sh"                36 minutes ago      Exited (0) 34 minutes ago                            eager_einstein
994a1fd988f5        alpine                      "echo 'hello from al…"   37 minutes ago      Exited (0) 37 minutes ago                            quirky_shtern
bdeed5e212b1        alpine                      "ls -l"                  37 minutes ago      Exited (0) 37 minutes ago                            silly_yalow
47daa94d2f3f        hello-world                 "/hello"                 40 minutes ago      Exited (0) 40 minutes ago                            thirsty_bartik
dd0ccaa1b50e        centos                      "/bin/bash"              5 days ago          Exited (255) About an hour ago                       gracious_mirzakhani
bf496b229594        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                             thirsty_lichterman
90862b21916b        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                               3Centos
714aa7097cb3        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                               2Centos
99002dca2766        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                             1centos
e0c4b6b65212        fae43ac36cee                "/bin/bash"              11 days ago         Exited (0) 11 days ago                               blissful_mendeleev
3d871ad261b1        fae43ac36cee                "/bin/bash"              11 days ago         Exited (127) 11 days ago                             happy_ardinghelli

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -d dockersamples/static-site
1978356cfb5493cc020ba6a279e92f5f024b44157276e8823d1567b93b9e0eb8
                                                                                                                                                                                    Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS               NAMES
1978356cfb54        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   4 seconds ago       Up 4 seconds        80/tcp, 443/tcp     infallible_wozniak

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker port static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker stop 1978356cfb54
1978356cfb54

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm 1978356cfb54
1978356cfb54

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
hello-world                 latest              2cb0d9787c4d        3 days ago          1.85kB
alpine                      latest              11cd0b38bc3c        7 days ago          4.41MB
centos-som23                latest              fae43ac36cee        11 days ago         329MB
someshdevops2018/test       latest              fae43ac36cee        11 days ago         329MB
ubuntu                      trusty              578c3e61a98c        5 weeks ago         223MB
centos                      latest              49f7960eb7e4        5 weeks ago         200MB
devops2018/batch23          latest              6a2aae469127        5 months ago        357MB
dockersamples/static-site   latest              f589ccde7957        2 years ago         191MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run --name static-site -e AUTHOR="TEST" -d -P dockersamples/static-site
C:\Program Files\Docker Toolbox\docker.exe: Error response from daemon: Conflict. The container name "/static-site" is already in use by container "e1d451079191e8d3aacb9bcb30198b3540032172e521e1a530a87e4e814a104d". You have to remove (or rename) that container to be able to reuse that name.
See 'C:\Program Files\Docker Toolbox\docker.exe run --help'.

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rmi f589ccde7957
Error response from daemon: conflict: unable to delete f589ccde7957 (must be forced) - image is being used by stopped container e1d451079191

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rmi -f f589ccde7957
Untagged: dockersamples/static-site:latest
Untagged: dockersamples/static-site@sha256:daa686c61d7d239b7977e72157997489db49f316b9b9af3909d9f10fd28b2dec
Deleted: sha256:f589ccde7957fa3ddf76a2eeee4d2f5d687b32176f559b703b6b8cacf6d36bc4

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE
hello-world             latest              2cb0d9787c4d        3 days ago          1.85kB
alpine                  latest              11cd0b38bc3c        7 days ago          4.41MB
someshdevops2018/test   latest              fae43ac36cee        11 days ago         329MB
centos-som23            latest              fae43ac36cee        11 days ago         329MB
ubuntu                  trusty              578c3e61a98c        5 weeks ago         223MB
centos                  latest              49f7960eb7e4        5 weeks ago         200MB
devops2018/batch23      latest              6a2aae469127        5 months ago        357MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run --name static-site -e AUTHOR="TEST" -d -P dockersamples/static-site
Unable to find image 'dockersamples/static-site:latest' locally
latest: Pulling from dockersamples/static-site
fdd5d7827f33: Already exists
a3ed95caeb02: Already exists
716f7a5f3082: Already exists
7b10f03a0309: Already exists
aff3ab7e9c39: Already exists
Digest: sha256:daa686c61d7d239b7977e72157997489db49f316b9b9af3909d9f10fd28b2dec
Status: Downloaded newer image for dockersamples/static-site:latest
C:\Program Files\Docker Toolbox\docker.exe: Error response from daemon: Conflict. The container name "/static-site" is already in use by container "e1d451079191e8d3aacb9bcb30198b3540032172e521e1a530a87e4e814a104d". You have to remove (or rename) that container to be able to reuse that name.
See 'C:\Program Files\Docker Toolbox\docker.exe run --help'.

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker port static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
hello-world                 latest              2cb0d9787c4d        3 days ago          1.85kB
alpine                      latest              11cd0b38bc3c        7 days ago          4.41MB
centos-som23                latest              fae43ac36cee        11 days ago         329MB
someshdevops2018/test       latest              fae43ac36cee        11 days ago         329MB
ubuntu                      trusty              578c3e61a98c        5 weeks ago         223MB
centos                      latest              49f7960eb7e4        5 weeks ago         200MB
devops2018/batch23          latest              6a2aae469127        5 months ago        357MB
dockersamples/static-site   latest              f589ccde7957        2 years ago         191MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps -a
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS                           PORTS                                           NAMES
e1d451079191        dockersamples/static-site   "e61d12292d69556eabe…"   7 minutes ago       Created                          0.0.0.0:32771->80/tcp, 0.0.0.0:32770->443/tcp   static-site
39ae0540a8b7        ubuntu:trusty               "/bin/bash"              14 minutes ago      Exited (0) 13 minutes ago                                                        sharp_mendeleev
1ef29507f5da        ubuntu:trusty               "ls -l"                  20 minutes ago      Exited (0) 20 minutes ago                                                        gracious_goodall
3ade16cb97ed        hello-world                 "/hello"                 38 minutes ago      Exited (0) 38 minutes ago                                                        mystifying_albattani
3b234053303d        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   About an hour ago   Exited (137) About an hour ago                                                   upbeat_kare
e25c4f960dd3        alpine                      "/bin/sh"                About an hour ago   Exited (0) About an hour ago                                                     eager_einstein
994a1fd988f5        alpine                      "echo 'hello from al…"   About an hour ago   Exited (0) About an hour ago                                                     quirky_shtern
bdeed5e212b1        alpine                      "ls -l"                  About an hour ago   Exited (0) About an hour ago                                                     silly_yalow
47daa94d2f3f        hello-world                 "/hello"                 About an hour ago   Exited (0) About an hour ago                                                     thirsty_bartik
dd0ccaa1b50e        centos                      "/bin/bash"              5 days ago          Exited (255) About an hour ago                                                   gracious_mirzakhani
bf496b229594        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                                                         thirsty_lichterman
90862b21916b        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                                                           3Centos
714aa7097cb3        centos                      "/bin/bash"              11 days ago         Exited (0) 11 days ago                                                           2Centos
99002dca2766        centos                      "/bin/bash"              11 days ago         Exited (127) 11 days ago                                                         1centos
e0c4b6b65212        fae43ac36cee                "/bin/bash"              11 days ago         Exited (0) 11 days ago                                                           blissful_mendeleev
3d871ad261b1        fae43ac36cee                "/bin/bash"              11 days ago         Exited (127) 11 days ago                                                         happy_ardinghelli

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm e1d451079191
e1d451079191

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker 3b234053303d
docker: '3b234053303d' is not a docker command.
See 'docker --help'

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm 3b234053303d
3b234053303d

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm 3b234053303d
3b234053303d

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run --name static-site -e AUTHOR="TEST" -d -P dockersamples/static-site
2b61e1dc3c92742c6f08502a8738230cc4367641726a2745b17cead8839fd5cd

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker port static-site
443/tcp -> 0.0.0.0:32772
80/tcp -> 0.0.0.0:32773

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker-machine ip default
192.168.99.100

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run --name static-site-2 -e AUTHOR="Your Name" -d -p 8888:80 dockersamples/static-site
2e71cbda8a7023acd3891f110a5d3648ce9d6d28861fc22cc02aa2a1941d3482

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker port static-site
443/tcp -> 0.0.0.0:32772
80/tcp -> 0.0.0.0:32773

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                                           NAMES
2e71cbda8a70        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   58 seconds ago      Up 58 seconds       443/tcp, 0.0.0.0:8888->80/tcp                   static-site-2
2b61e1dc3c92        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   4 minutes ago       Up 4 minutes        0.0.0.0:32773->80/tcp, 0.0.0.0:32772->443/tcp   static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
=============================output for static-site in web page====================
http://192.168.99.100:32773/

Hello TEST!
This is being served from a docker
container running Nginx.

=======================================================================
=============================output for static-site2 in web page====================
http://192.168.99.100:8888/

Hello Your Name!
This is being served from a docker
container running Nginx.

=======================================================================
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS                                           NAMES
2e71cbda8a70        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   58 seconds ago      Up 58 seconds       443/tcp, 0.0.0.0:8888->80/tcp                   static-site-2
2b61e1dc3c92        dockersamples/static-site   "/bin/sh -c 'cd /usr…"   4 minutes ago       Up 4 minutes        0.0.0.0:32773->80/tcp, 0.0.0.0:32772->443/tcp   static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker stop static-site
static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker stop static-site2
Error response from daemon: No such container: static-site2

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker stop static-site-2
static-site-2

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm static-site
static-site

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm static-site-2
static-site-2
=====================================
Stop All Containers

# docker stop $(docker ps -a -q)
Remove All Containers

# docker rm $(docker ps -a -q)
======================================
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker stop $(docker ps -a -q)
39ae0540a8b7
1ef29507f5da
3ade16cb97ed
e25c4f960dd3
994a1fd988f5
bdeed5e212b1
47daa94d2f3f
dd0ccaa1b50e
bf496b229594
90862b21916b
714aa7097cb3
99002dca2766
e0c4b6b65212
3d871ad261b1

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE
hello-world                 latest              2cb0d9787c4d        3 days ago          1.85kB
alpine                      latest              11cd0b38bc3c        7 days ago          4.41MB
centos-som23                latest              fae43ac36cee        11 days ago         329MB
someshdevops2018/test       latest              fae43ac36cee        11 days ago         329MB
ubuntu                      trusty              578c3e61a98c        5 weeks ago         223MB
centos                      latest              49f7960eb7e4        5 weeks ago         200MB
devops2018/batch23          latest              6a2aae469127        5 months ago        357MB
dockersamples/static-site   latest              f589ccde7957        2 years ago         191MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker rm $(docker ps -a -q)
39ae0540a8b7
1ef29507f5da
3ade16cb97ed
e25c4f960dd3
994a1fd988f5
bdeed5e212b1
47daa94d2f3f
dd0ccaa1b50e
bf496b229594
90862b21916b
714aa7097cb3
99002dca2766
e0c4b6b65212
3d871ad261b1

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker info
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 7
Server Version: 18.05.0-ce
Storage Driver: aufs
 Root Dir: /mnt/sda1/var/lib/docker/aufs
 Backing Filesystem: extfs
 Dirs: 20
 Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 773c489c9c1b21a6d78b5c538cd395416ec50f88
runc version: 4fc53a81fb7c994640722ac585fa9ca548971871
init version: 949e6fa
Security Options:
 seccomp
  Profile: default
Kernel Version: 4.9.93-boot2docker
Operating System: Boot2Docker 18.05.0-ce (TCL 8.2.1); HEAD : b5d6989 - Thu May 10 16:35:28 UTC 2018
OSType: linux
Architecture: x86_64
CPUs: 1
Total Memory: 995.6MiB
Name: default
ID: 7B6U:LL4K:MJ7X:BQL4:AK7J:HDQV:45PF:PEWK:ZVAJ:FKCX:SGA5:IE6R
Docker Root Dir: /mnt/sda1/var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Username: someshdevops2018
Registry: https://index.docker.io/v1/
Labels:
 provider=virtualbox
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false


Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker build -t someshdevops2018/myfirstapp .
Sending build context to Docker daemon  8.192kB
Step 1/9 : FROM alpine:3.5
3.5: Pulling from library/alpine
f4900964ff56: Pull complete
Digest: sha256:4d3ec631cdde98a03b91477b411a1fb42a9cadd8139c2e78029e44e199e58433
Status: Downloaded newer image for alpine:3.5
 ---> a2b04ae28915
Step 2/9 : RUN apk add --update py2-pip
 ---> Running in 36424b6ac168
fetch http://dl-cdn.alpinelinux.org/alpine/v3.5/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.5/community/x86_64/APKINDEX.tar.gz
(1/12) Installing libbz2 (1.0.6-r5)
(2/12) Installing expat (2.2.0-r1)
(3/12) Installing libffi (3.2.1-r2)
(4/12) Installing gdbm (1.12-r0)
(5/12) Installing ncurses-terminfo-base (6.0_p20171125-r0)
(6/12) Installing ncurses-terminfo (6.0_p20171125-r0)
(7/12) Installing ncurses-libs (6.0_p20171125-r0)
(8/12) Installing readline (6.3.008-r4)
(9/12) Installing sqlite-libs (3.15.2-r2)
(10/12) Installing python2 (2.7.14-r0)
(11/12) Installing py-setuptools (29.0.1-r0)
(12/12) Installing py2-pip (9.0.0-r1)
Executing busybox-1.25.1-r2.trigger
OK: 61 MiB in 23 packages
Removing intermediate container 36424b6ac168
 ---> ba0b604605df
Step 3/9 : RUN pip install --upgrade pip
 ---> Running in c5dbebf62571
Collecting pip
  Downloading https://files.pythonhosted.org/packages/0f/74/ecd13431bcc456ed390b44c8a6e917c1820365cbebcb6a8974d1cd045ab4/pip-10.0.1-py2.py3-none-any.whl (1.3MB)
Installing collected packages: pip
  Found existing installation: pip 9.0.0
    Uninstalling pip-9.0.0:
      Successfully uninstalled pip-9.0.0
Successfully installed pip-10.0.1
Removing intermediate container c5dbebf62571
 ---> 2f68fbb72351
Step 4/9 : COPY requirements.txt /usr/src/app/
 ---> b97287b4a3cf
Step 5/9 : RUN pip install --no-cache-dir -r /usr/src/app/requirements.txt
 ---> Running in bbe6735cf970
Collecting Flask==0.10.1 (from -r /usr/src/app/requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/db/9c/149ba60c47d107f85fe52564133348458f093dd5e6b57a5b60ab9ac517bb/Flask-0.10.1.tar.gz (544kB)
Collecting Werkzeug>=0.7 (from Flask==0.10.1->-r /usr/src/app/requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/20/c4/12e3e56473e52375aa29c4764e70d1b8f3efa6682bef8d0aae04fe335243/Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)
Collecting Jinja2>=2.4 (from Flask==0.10.1->-r /usr/src/app/requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl (126kB)
Collecting itsdangerous>=0.21 (from Flask==0.10.1->-r /usr/src/app/requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/dc/b4/a60bcdba945c00f6d608d8975131ab3f25b22f2bcfe1dab221165194b2d4/itsdangerous-0.24.tar.gz (46kB)
Collecting MarkupSafe>=0.23 (from Jinja2>=2.4->Flask==0.10.1->-r /usr/src/app/requirements.txt (line 1))
  Downloading https://files.pythonhosted.org/packages/4d/de/32d741db316d8fdb7680822dd37001ef7a448255de9699ab4bfcbdf4172b/MarkupSafe-1.0.tar.gz
Installing collected packages: Werkzeug, MarkupSafe, Jinja2, itsdangerous, Flask
  Running setup.py install for MarkupSafe: started
    Running setup.py install for MarkupSafe: finished with status 'done'
  Running setup.py install for itsdangerous: started
    Running setup.py install for itsdangerous: finished with status 'done'
  Running setup.py install for Flask: started
    Running setup.py install for Flask: finished with status 'done'
Successfully installed Flask-0.10.1 Jinja2-2.10 MarkupSafe-1.0 Werkzeug-0.14.1 itsdangerous-0.24
Removing intermediate container bbe6735cf970
 ---> cf81663d3709
Step 6/9 : COPY app.py /usr/src/app/
 ---> 6bebf861b2b6
Step 7/9 : COPY templates/index.html /usr/src/app/templates/
 ---> bbe88448c69a
Step 8/9 : EXPOSE 5000
 ---> Running in 0cadfa2ce814
Removing intermediate container 0cadfa2ce814
 ---> 74137e2a4613
Step 9/9 : CMD ["python", "/usr/src/app/app.py"]
 ---> Running in f962cc4d5754
Removing intermediate container f962cc4d5754
 ---> 8857bf3b1309
Successfully built 8857bf3b1309
Successfully tagged someshdevops2018/myfirstapp:latest
SECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have '-rwxr-xr-x' permissions. It is recommended to double check and reset permissions for sensitive files and directories.

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker run -p 8888:5000 --name myfirstapp someshdevops2018/myfirstapp
 * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)
192.168.99.1 - - [14/Jul/2018 06:46:18] "GET / HTTP/1.1" 200 -
192.168.99.1 - - [14/Jul/2018 06:46:33] "GET / HTTP/1.1" 200 -
192.168.99.1 - - [14/Jul/2018 06:47:15] "GET / HTTP/1.1" 200 -
192.168.99.1 - - [14/Jul/2018 06:47:18] "GET / HTTP/1.1" 200 -
192.168.99.1 - - [14/Jul/2018 06:47:19] "GET / HTTP/1.1" 200 -
192.168.99.1 - - [14/Jul/2018 06:47:20] "GET / HTTP/1.1" 200 -

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username (someshdevops2018): someshdevops2018
Password:
Login Succeeded

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker push someshdevops2018/myfirstapp
The push refers to repository [docker.io/someshdevops2018/myfirstapp]
20adfa7381b9: Pushed
c5a3bc17f3d2: Pushed
3c8e2fa2f9b3: Pushed
f787bf69d5d7: Pushed
03b9c66a6525: Pushed
482d2f8129cd: Pushed
7105cc56962c: Mounted from library/alpine
latest: digest: sha256:96e486cd22c022e242cd2255cd976cc256226369fdfaf945695834198e78b3d7 size: 1783

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker stop myfirstapp
myfirstapp

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$ docker rm myfirstapp
myfirstapp

Somesh@Som MINGW64 ~/DockerProjects/pythonProj
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -ti ubuntu:trusty
root@c6eaead5d71f:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@c6eaead5d71f:/# mkdir test
root@c6eaead5d71f:/# chmod 777 test
root@c6eaead5d71f:/#
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
c6eaead5d71f        ubuntu:trusty       "/bin/bash"         38 seconds ago      Up 35 seconds                           competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker exec c6eaead5d71f bash

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker exec -ti c6eaead5d71f bash
root@c6eaead5d71f:/# ls
bin   dev  home  lib64  mnt  proc  run   srv  test  usr
boot  etc  lib   media  opt  root  sbin  sys  tmp   var
root@c6eaead5d71f:/# exit
exit

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMES
c6eaead5d71f        ubuntu:trusty       "/bin/bash"         About a minute ago   Up About a minute                       competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMES
c6eaead5d71f        ubuntu:trusty       "/bin/bash"         About a minute ago   Up About a minute                       competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -d -ti ubuntu:trusty
2f54cfbf36887f8132fd300011977a3a2c9bb551d220d4cde56d36be970cad12

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
2f54cfbf3688        ubuntu:trusty       "/bin/bash"         8 seconds ago       Up 5 seconds                            awesome_wescoff
c6eaead5d71f        ubuntu:trusty       "/bin/bash"         2 minutes ago       Up 2 minutes                            competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker attach 2f54cfbf36887f8132fd300011977a3a2c9bb551d220d4cde56d36be970cad12
root@2f54cfbf3688:/#
root@2f54cfbf3688:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@2f54cfbf3688:/# mkdir roshan
root@2f54cfbf3688:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  roshan  run  sbin  srv  sys  tmp  usr  var
root@2f54cfbf3688:/# read escape sequence

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ ls
boot2docker.iso  docker-compose.exe*  docker-quickstart-terminal.ico  kitematic/  unins000.dat
docker.exe*      docker-machine.exe*  installers/                     start.sh*   unins000.exe*

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED              STATUS              PORTS               NAMES
2f54cfbf3688        ubuntu:trusty       "/bin/bash"         About a minute ago   Up About a minute                       awesome_wescoff
c6eaead5d71f        ubuntu:trusty       "/bin/bash"         4 minutes ago        Up 4 minutes                            competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker attach 2f54cfbf36887f8132fd300011977a3a2c9bb551d220d4cde56d36be970cad12
root@2f54cfbf3688:/#
root@2f54cfbf3688:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  roshan  run  sbin  srv  sys  tmp  usr  var
root@2f54cfbf3688:/# read escape sequence

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -d -ti -P nginx
f4a0b3908fc956306c3aa4272596ed26344c266d3d5944e7a1fa67d6157470c2

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES
f4a0b3908fc9        nginx               "nginx -g 'daemon of…"   8 seconds ago       Up 4 seconds        0.0.0.0:32774->80/tcp   sharp_chatterjee
74b8fe02bc21        nginx               "nginx -g 'daemon of…"   10 minutes ago      Up 10 minutes       80/tcp                  hopeful_blackwell
2f54cfbf3688        ubuntu:trusty       "/bin/bash"              16 minutes ago      Up 15 minutes                               awesome_wescoff
c6eaead5d71f        ubuntu:trusty       "/bin/bash"              18 minutes ago      Up 18 minutes                               competent_bardeen

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
=======================================================================
=============================output for nginx port mappint====================
http://192.168.99.100:32774/

Welcome to nginx!
If you see this page, the nginx web server is successfully installed and working. Further configuration is required.

For online documentation and support please refer to nginx.org.
Commercial support is available at nginx.com.

Thank you for using nginx.

=======================================================================
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images| grep nginx
nginx                         latest              3c5a05123222        2 weeks ago         109MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -ti --name box1 ubuntu:trusty
root@113e371813b1:/#
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker run -ti --name box2 ubuntu:trusty
root@1e76a5cb00ca:/#

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker inspect --format '{{.NetworkSettings.Networks.bridge.IPAddress}}' box1 box2
172.17.0.2
172.17.0.3

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
e090a1f14dcf        bridge              bridge              local
6d70d49f1d86        bridge01            bridge              local
c6c87e2f4e95        host                host                local
c4c73bd9d00d        none                null                local

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
=======================================================================
docker rmi $(docker images -q) -f
deleteing all of your images forcefully (use this command at your own risk it will delete all of your images)
======================================================================			
$ docker rmi $(docker images -q) -f
Untagged: training-python:latest
Deleted: sha256:8574e10c42e10ccdeacf2b1a394ec2f6d0cd5a737aa745e29bdc7533b0adebf5
Deleted: sha256:a7544179ea952fa0f2b001b32822fb558ca17d85cc093bb01b20e7d02b770024
Deleted: sha256:23a856d2aa65fcf10141c84b5304be96228fd2f87060d3a218f24a422fc60a95
Deleted: sha256:4056af9611730f13f72eba60c0b772a25cab1e70d6236a9f7cdd8ce7d5a4649b
Deleted: sha256:f55ba217f577add8c42ba1b14f307c5b3803087dd4440ca494536d9c4c4428e1
Deleted: sha256:284260848f6972a8920bfbbb0ec45faeacccb47c180ec9bde31e680ec7b9e593
Deleted: sha256:cb24e8ad99a2e5c167858dcdf132aa8bff1e4d35fb4baabf411bbf57b54912e3
Deleted: sha256:a309f373ade0b657e5e550987569791659a174a855d1c3b841175058eb4544b7
Deleted: sha256:65e828ce854c8d7c07a0011b38d7a6ca3d089631a12736551ecb63e3f5c88d48
Deleted: sha256:7a0bb8bb044964458f28d4cfe180fff222acf595658e7773e3474d1c7a1ecb66
Deleted: sha256:a45a6191aab1adcf76f8ebdeac303acb17dad5c7db958b514b53733283519796
Deleted: sha256:a946ffe19fb8b7263afe7360f03d028e5aca4554863893a8987b317a3f874c92
Deleted: sha256:59a63c0871e40bc5d2f80c00f840c25cdd68e229481bb6d77691b6e5824a9096
Deleted: sha256:ee627df144af9563bb8913525ec718748c510a7f9b3d44f2a55b562e72302065
Deleted: sha256:42ed8f91cfdc78436de4ed8dd261b8b5a749c127bbd63e4dbd92f919b6457d93
Deleted: sha256:2d46ec5e4321c4186badf877beb0797df9382115876ae4c3289f874d1bcfaf5a
Deleted: sha256:7bea3554fb24447af3a86cd2888f8097110a429fb13704d00e08a211a8cf28cc
Deleted: sha256:31a9765862471f69bd5a9be93ba8fdb2269b349804cf9cba03588cbe975dc4f0
Deleted: sha256:78dce246f2cb3a872e1470c632a2f03b2663c6b04af50fe522f87122a9bbf64d
Deleted: sha256:6f6138157e77c84a41efe25a2f79305f2bb95ae056545243044ec0761563c184
Deleted: sha256:0b8b7d30e2fa7a3172ec87fc0d6cc4557f4a6b96db07ae145e83896ab33419b6
Deleted: sha256:1c4cea57b660fe1866029138d489617a28652bf9a2baba6c7d52581551c803b7
Deleted: sha256:f702e91a53c51097cfe43b429cd0b2c6e578b351283bc128065bf7fa47bf1a6e
Deleted: sha256:f62e18b5b82c3858aebd0d6ac6451b7f3d93ae40ed71a22e1a7e239ecb07a728
Deleted: sha256:9f4c78548c3e2dcee3b4a6b4b251a1cbde307f0714ec62f674a5b8b22ca3b48a
Deleted: sha256:9c5ad2169317f44545d7c9dddfad870c50e51afff54f65400c258afeef335d26
Deleted: sha256:5e6abab9ec39dc3000260682c89ed553eabe3cb4f9197b4dca80049cf1835977
Deleted: sha256:208420b5aaa4e2fa99fdd2415b2ca0bfe5364209b8b23f46d10eac3855ea103e
Deleted: sha256:737203626991ce3b72ac96296e66b3f0857083b331e68950b50db3183813718b
Deleted: sha256:1c27dc9423e5a209c146bcf6f26d3d203e921a05e9c56e159981309d2576a62c
Untagged: ubuntu:trusty
Untagged: ubuntu@sha256:71529e96591eb36a4100cd0cc5353ff1a2f4ee7a85011e3d3dd07cb5eb524a3e
Deleted: sha256:971bb384a50ae93856362f9c40ea471e66a97cfd4023b9cc9b8e4196e99da2c7
Deleted: sha256:a5502161d34b6a7f2c546195a12ef69e3ff740405d1f470d9cfa8cd63c8bf4c3
Deleted: sha256:786c336cfb756691263d4fa38794d5f35993082b37ee39bf06f22dcc6e0211e4
Deleted: sha256:63494cf63d0a655f928af101fe8ec8542a9792b1cb1fbe6633e745a643b4933a
Deleted: sha256:05ddaa650e66bebc65ec1c3f12a31da84711beee6976f2f0a799b3864300cd7e
Deleted: sha256:93da31b6a5499e9b86dcd8ea0cf6b5d0fa9ed5b9beaedceee5b58218b494e80e
Untagged: alpine:3.5
Untagged: alpine@sha256:4d3ec631cdde98a03b91477b411a1fb42a9cadd8139c2e78029e44e199e58433
Deleted: sha256:a2b04ae289152f58ca4cc62f46ea247f18da04ad8ff9594e13f133d9e8c79aa3
Deleted: sha256:7105cc56962c944095ee6b4625c3138d3485b68b483986579f9c82c26c98c605

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
===========================================================================================
	===========================================================================================
Management Commands:
  checkpoint  Manage checkpoints
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  deploy      Deploy a new stack or update an existing stack
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
====================================================================================================
Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker search busybox
NAME                        DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
busybox                     Busybox base image.                             1299                [OK]
progrium/busybox                                                            67                                      [OK]
hypriot/rpi-busybox-httpd   Raspberry Pi compatible Docker Image with a …   41
radial/busyboxplus          Full-chain, Internet enabled, busybox made f…   19                                      [OK]
hypriot/armhf-busybox       Busybox base image for ARM.                     9
arm32v7/busybox             Busybox base image.                             5
armhf/busybox               Busybox base image.                             4
armel/busybox               Busybox base image.                             2
yauritux/busybox-curl       Busybox with CURL                               2
prom/busybox                Prometheus Busybox Docker base images           2                                       [OK]
p7ppc64/busybox             Busybox base image for ppc64.                   2
aarch64/busybox             Busybox base image.                             2
s390x/busybox               Busybox base image.                             2
onsi/grace-busybox                                                          2
odise/busybox-curl                                                          2                                       [OK]
i386/busybox                Busybox base image.                             2
sequenceiq/busybox                                                          2                                       [OK]
spotify/busybox             Spotify fork of https://hub.docker.com/_/bus…   1
arm64v8/busybox             Busybox base image.                             1
ppc64le/busybox             Busybox base image.                             1
trollin/busybox                                                             0
amd64/busybox               Busybox base image.                             0
ggtools/busybox-ubuntu      Busybox ubuntu version with extra goodies       0                                       [OK]
cfgarden/garden-busybox                                                     0
concourse/busyboxplus                                                       0

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker search -s 50 busybox
Flag --stars has been deprecated, use --filter=stars=3 instead
NAME                DESCRIPTION           STARS               OFFICIAL            AUTOMATED
busybox             Busybox base image.   1299                [OK]
progrium/busybox                          67                                      [OK]

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
be8881be8156: Pull complete
32d9726baeef: Pull complete
87e5e6f71297: Pull complete
Digest: sha256:d85914d547a6c92faa39ce7058bd7529baacab7e0cd4255442b04577c4d1f424
Status: Downloaded newer image for nginx:latest

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker pull nginx:1.9
1.9: Pulling from library/nginx
51f5c6a04d83: Pull complete
a3ed95caeb02: Pull complete
640c8f3d0eb2: Pull complete
a4335300aa89: Pull complete
Digest: sha256:54313b5c376892d55205f13d620bc3dcccc8e70e596d083953f95e94f071f6db
Status: Downloaded newer image for nginx:1.9

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              c82521676580        37 hours ago        109MB
nginx               1.9                 c8c29d842c09        2 years ago         183MB

Somesh@Som MINGW64 /c/Program Files/Docker Toolbox
$
=================================docker run --help=====================================================================
$ docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container

Options:
      --add-host list                  Add a custom host-to-IP mapping  (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight),
                                       between 10 and 1000, or 0 to disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the container
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution(0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution(0-3, 0,1)
  -d, --detach                         Run container in background and print container ID
      --detach-keys string             Override the key sequence for detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed devices list
      --device-read-bps list           Limit read rate (bytes per second) from a device (default [])
      --device-read-iops list          Limit read rate (IO per second) from a device (default [])
      --device-write-bps list          Limit write rate (bytes per second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second)to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --entrypoint string              Overwrite the default ENTRYPOINT of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to report unhealthy
      --health-start-period duration   Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container that forwards signals and reaps processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g., 92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the container
      --name string                    Assign a name to the container
      --network string                 Connect a container to a network (default "default")
      --network-alias list             Add network-scoped alias for the container
      --no-healthcheck                 Disable any container-specified  HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000  to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1  for unlimited)
      --privileged                     Give extended privileges to this  container
  -p, --publish list                   Publish a container's port(s) to the host
  -P, --publish-all                    Publish all exposed ports to random ports
      --read-only                      Mount the container's root filesystem as read only
      --restart string                 Restart policy to apply when a container exits (default "no")
      --rm                             Automatically remove the container  when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the  process (default true)
      --stop-signal string             Signal to stop a container (default "15")
      --stop-timeout int               Timeout (in seconds) to stop a  container
      --storage-opt list               Storage driver options for the container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the container
      --volumes-from list              Mount volumes from the specified container(s)
  -w, --workdir string                 Working directory inside the container

======================================================================================================
docker run --rm -ti --name chef-ws --network chef -v /c/Users/Somesh/DockerProjects/chef-ws/chef-repo:/root/chef-repo schogini/chef-ws --> for server 
docker run --rm -ti --name chefnode1 --network chef schogini/chef-node --> for client node
Knife bootstrap chefnode1 -x root -P 123456 -N chefnode1 --> load node file using knife..